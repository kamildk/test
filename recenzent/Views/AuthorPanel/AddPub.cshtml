@model recenzent.Models.PublicationViewModel
@{
    ViewBag.Title = "Dodaj publikacje";
}

<script>
    function AddSource() {
        var length = $("#SourcesList input").length;
        var buttonCode = '<button type="button" class = "btn btn-sm col-sm-1" id =sButton' + length + ' onclick="RemoveSource(' +length+')">Usuń</button>';
        $("#SourcesList").append('<input type="text"  class="list-group-item col-sm-11" id = source' + length + ' onchange = SetSources()>' + buttonCode);
    }

    function RemoveSource(id){
        $('#source' + id).remove();
        $('#sButton' + id).remove();

        SetSources();
    }

    function SetSources() {
        var length = $("#SourcesList input").length;
        var text = ""
        for (var i = 0; i < length; i++) {
            id = $("#SourcesList input").get(i).id
            text += $('#'+id).val() + "\n";
        }
        $("#testBox").val(text);
        //alert($("#testBox").val());
    }

    function Test() {
        alert($("#testBox").val());
    }
</script>

<div class="container">
    <div>
        <h2>Dodaj Publikacje</h2>
        @Html.ActionLink("Powrót", "Index")
    </div>
    @using (Html.BeginForm("AddPub", "AuthorPanel", FormMethod.Post, new { enctype = "multipart/form-data" })) {

        <div class="form-group col-md-10">
            <label class="control-label">Tytuł</label>
            <div>
                @*<input type="text" class="form-control" id="title" name="title">*@
                @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group col-md-10">
            <label class="control-label" for="file">Plik</label>
            <div>
                @*<input type="file" class="form-control" id="PublicationFile" name="file"/>*@
                @Html.TextBoxFor(m => m.File, new { @class = "form-control inputlg", type = "file", accept = ".pdf" })
            </div>
        </div>

        <div class="form-group col-md-10">
            <label class="control-label">Kategoria</label>
            <div>
                @Html.DropDownListFor(m => m.Category, new SelectList(ViewBag.Categories), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group col-md-10">
            <label class="control-label">Tagi</label>
            <div>
                @*<input type="text" class="form-control" id="tags" name="tags" placeholder="Tagi należy podawać po przecinku, np.Fizyka, Matematyka...">*@
                @Html.TextBoxFor(m => m.Tags, new { @class = "form-control", placeholder = "Tagi należy podawać po przecinku, np.Fizyka, Matematyka..." })
            </div>
        </div>

        <div class="form-group col-md-10">
            <label class="control-label">Źródła</label>
            <button type="button" class="btn" id="btn1" onclick="AddSource()">Dodaj</button>
            @*<button type="button" class="btn" id="btn2" onclick="Test()">test</button>*@
            <div>

                <div class="list-group" id="SourcesList">
                </div>

                @Html.TextAreaFor(m => m.Sources, new { @class = "form-control hidden", id = "testBox" })

            </div>

        </div>

        <div class="form-group col-md-10">
            <label class="control-label" for="comment">Opis</label>
            <div>
                @*<textarea class="form-control" rows="5" id="Description"></textarea>*@
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = "5", required = "true" })
            </div>
        </div>

        <div class="form-group col-md-10">
            <button type="submit" class="btn btn-default">Akceptuj</button>
        </div>


        @ViewBag.Message
    }
</div>